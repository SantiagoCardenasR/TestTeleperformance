{"ast":null,"code":"export const initialState = {\n  users: getUsers()\n};\n\nconst getUsers = () => {\n  var allUsers = [];\n  reference.child(\"users\").on(\"value\", snap => {\n    snap.forEach(element => {\n      if (element.val() !== null) {\n        allUsers.push(element.val());\n      }\n    });\n  });\n  return allUsers;\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'ADD_USER':\n      state.users.forEach(element => {\n        if (element.cc === action.user.cc) {\n          return { ...state\n          };\n        }\n      });\n      return { ...state,\n        users: [...state.users, action.user]\n      };\n\n    case 'UPDATE_USER':\n      let usersToChange = [...state.users];\n      usersToChange.forEach(element => {\n        if (element.cc === action.user.cc) {\n          console.log(\"ENTRA A CAMBIAR\");\n          console.log(usersToChange);\n          element.cc = action.user.cc;\n          element.name = action.user.name;\n          element.country = action.user.country;\n          console.log(usersToChange);\n        }\n      });\n      return { ...state,\n        users: usersToChange\n      };\n\n    case 'DELETE_USER':\n      let newUsersToDelete = [...state.users];\n      const deleteIndex = state.users.findIndex(user => user.cc === action.cc);\n\n      if (deleteIndex >= 0) {\n        newUsersToDelete.splice(deleteIndex, 1);\n      }\n\n      return { ...state,\n        users: newUsersToDelete\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["D:/XAMPP/htdocs/tptest/src/reducer.js"],"names":["initialState","users","getUsers","allUsers","reference","child","on","snap","forEach","element","val","push","reducer","state","action","type","cc","user","usersToChange","console","log","name","country","newUsersToDelete","deleteIndex","findIndex","splice"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACzBC,EAAAA,KAAK,EAAEC,QAAQ;AADU,CAArB;;AAIP,MAAMA,QAAQ,GAAG,MAAM;AACnB,MAAIC,QAAQ,GAAG,EAAf;AACAC,EAAAA,SAAS,CAACC,KAAV,CAAgB,OAAhB,EAAyBC,EAAzB,CAA4B,OAA5B,EAAsCC,IAAD,IAAU;AAC3CA,IAAAA,IAAI,CAACC,OAAL,CAAcC,OAAD,IAAa;AACxB,UAAIA,OAAO,CAACC,GAAR,OAAkB,IAAtB,EAA4B;AAC1BP,QAAAA,QAAQ,CAACQ,IAAT,CAAcF,OAAO,CAACC,GAAR,EAAd;AACD;AACF,KAJD;AAKD,GANH;AAOE,SAAOP,QAAP;AACL,CAVD;;AAYA,SAASS,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EACA;AAEI,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,UAAL;AACIF,MAAAA,KAAK,CAACZ,KAAN,CAAYO,OAAZ,CAAoBC,OAAO,IAAI;AAC3B,YAAGA,OAAO,CAACO,EAAR,KAAeF,MAAM,CAACG,IAAP,CAAYD,EAA9B,EAAkC;AAC9B,iBAAO,EAAC,GAAGH;AAAJ,WAAP;AACH;AACJ,OAJD;AAKA,aAAO,EAAC,GAAGA,KAAJ;AAAWZ,QAAAA,KAAK,EAAE,CAAC,GAAGY,KAAK,CAACZ,KAAV,EAAiBa,MAAM,CAACG,IAAxB;AAAlB,OAAP;;AACJ,SAAK,aAAL;AACI,UAAIC,aAAa,GAAG,CAAC,GAAGL,KAAK,CAACZ,KAAV,CAApB;AACAiB,MAAAA,aAAa,CAACV,OAAd,CAAsBC,OAAO,IAAI;AAC7B,YAAGA,OAAO,CAACO,EAAR,KAAeF,MAAM,CAACG,IAAP,CAAYD,EAA9B,EAAkC;AAC9BG,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACAT,UAAAA,OAAO,CAACO,EAAR,GAAaF,MAAM,CAACG,IAAP,CAAYD,EAAzB;AACAP,UAAAA,OAAO,CAACY,IAAR,GAAeP,MAAM,CAACG,IAAP,CAAYI,IAA3B;AACAZ,UAAAA,OAAO,CAACa,OAAR,GAAkBR,MAAM,CAACG,IAAP,CAAYK,OAA9B;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACH;AACJ,OATD;AAUA,aAAO,EAAC,GAAGL,KAAJ;AAAWZ,QAAAA,KAAK,EAAEiB;AAAlB,OAAP;;AACA,SAAK,aAAL;AACI,UAAIK,gBAAgB,GAAG,CAAC,GAAGV,KAAK,CAACZ,KAAV,CAAvB;AACA,YAAMuB,WAAW,GAAGX,KAAK,CAACZ,KAAN,CAAYwB,SAAZ,CAAuBR,IAAD,IAAUA,IAAI,CAACD,EAAL,KAAYF,MAAM,CAACE,EAAnD,CAApB;;AACA,UAAGQ,WAAW,IAAI,CAAlB,EACA;AACID,QAAAA,gBAAgB,CAACG,MAAjB,CAAwBF,WAAxB,EAAqC,CAArC;AACH;;AACD,aAAO,EAAC,GAAGX,KAAJ;AAAWZ,QAAAA,KAAK,EAAEsB;AAAlB,OAAP;;AACR;AACI,aAAOV,KAAP;AA/BR;AAiCH;;AAED,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n   users: getUsers(),\r\n};\r\n\r\nconst getUsers = () => {\r\n    var allUsers = []\r\n    reference.child(\"users\").on(\"value\", (snap) => {\r\n        snap.forEach((element) => {\r\n          if (element.val() !== null) {\r\n            allUsers.push(element.val())\r\n          }\r\n        });\r\n      });\r\n      return allUsers;\r\n}\r\n\r\nfunction reducer(state, action)\r\n{\r\n\r\n    switch(action.type)\r\n    {\r\n        case 'ADD_USER':\r\n            state.users.forEach(element => {\r\n                if(element.cc === action.user.cc) {\r\n                    return {...state}\r\n                }\r\n            });\r\n            return {...state, users: [...state.users, action.user], };\r\n        case 'UPDATE_USER':\r\n            let usersToChange = [...state.users];\r\n            usersToChange.forEach(element => {\r\n                if(element.cc === action.user.cc) {\r\n                    console.log(\"ENTRA A CAMBIAR\")\r\n                    console.log(usersToChange)\r\n                    element.cc = action.user.cc\r\n                    element.name = action.user.name\r\n                    element.country = action.user.country\r\n                    console.log(usersToChange)\r\n                }\r\n            });\r\n            return {...state, users: usersToChange};\r\n            case 'DELETE_USER':\r\n                let newUsersToDelete = [...state.users];\r\n                const deleteIndex = state.users.findIndex((user) => user.cc === action.cc);\r\n                if(deleteIndex >= 0)\r\n                {\r\n                    newUsersToDelete.splice(deleteIndex, 1);\r\n                } \r\n                return {...state, users: newUsersToDelete};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}