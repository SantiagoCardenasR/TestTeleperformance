{"ast":null,"code":"import { con } from \"./Mysql\";\nexport const initialState = {\n  users: []\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'ADD_USER':\n      con.connect(function (err) {\n        if (err) throw err;\n        console.log(\"Connected!\");\n        /* var sql = `INSERT INTO users (cc, name, country) VALUES ('${action.user.cc}', '${action.user.name}', '${action.user.country}')`;\r\n        con.query(sql, function (err, result) {\r\n          if (err) {\r\n              throw err\r\n            }\r\n        }); */\n      });\n      return { ...state,\n        users: [...state.users, action.user]\n      };\n\n    case 'UPDATE_USER':\n      let newUsers = [...state.users];\n      const index = state.users.findIndex(user => user.cc === action.cc);\n\n      if (index >= 0) {\n        newUsers[index].cc = action.user.cc;\n        newUsers[index].name = action.user.name;\n        newUsers[index].country = action.user.country;\n      }\n\n      return { ...state,\n        users: newUsers\n      };\n\n    case 'DELETE_USER':\n      let newUsersToDelete = [...state.users];\n      const deleteIndex = state.users.findIndex(user => user.cc === action.cc);\n\n      if (deleteIndex >= 0) {\n        newUsersToDelete.splice(deleteIndex, 1);\n      }\n\n      return { ...state,\n        users: newUsersToDelete\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["D:/XAMPP/htdocs/tptest/src/reducer.js"],"names":["con","initialState","users","reducer","state","action","type","connect","err","console","log","user","newUsers","index","findIndex","cc","name","country","newUsersToDelete","deleteIndex","splice"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,SAAlB;AACA,OAAO,MAAMC,YAAY,GAAG;AACzBC,EAAAA,KAAK,EAAE;AADkB,CAArB;;AAIP,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EACA;AAEI,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,UAAL;AACIN,MAAAA,GAAG,CAACO,OAAJ,CAAY,UAASC,GAAT,EAAc;AACtB,YAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA;AAChB;AACA;AACA;AACA;AACA;AACa,OATD;AAUA,aAAO,EAAC,GAAGN,KAAJ;AAAWF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiBG,MAAM,CAACM,IAAxB;AAAlB,OAAP;;AACJ,SAAK,aAAL;AACI,UAAIC,QAAQ,GAAG,CAAC,GAAGR,KAAK,CAACF,KAAV,CAAf;AACA,YAAMW,KAAK,GAAGT,KAAK,CAACF,KAAN,CAAYY,SAAZ,CAAuBH,IAAD,IAAUA,IAAI,CAACI,EAAL,KAAYV,MAAM,CAACU,EAAnD,CAAd;;AACA,UAAGF,KAAK,IAAI,CAAZ,EACA;AACID,QAAAA,QAAQ,CAACC,KAAD,CAAR,CAAgBE,EAAhB,GAAqBV,MAAM,CAACM,IAAP,CAAYI,EAAjC;AACAH,QAAAA,QAAQ,CAACC,KAAD,CAAR,CAAgBG,IAAhB,GAAuBX,MAAM,CAACM,IAAP,CAAYK,IAAnC;AACAJ,QAAAA,QAAQ,CAACC,KAAD,CAAR,CAAgBI,OAAhB,GAA0BZ,MAAM,CAACM,IAAP,CAAYM,OAAtC;AACH;;AACD,aAAO,EAAC,GAAGb,KAAJ;AAAWF,QAAAA,KAAK,EAAEU;AAAlB,OAAP;;AACA,SAAK,aAAL;AACI,UAAIM,gBAAgB,GAAG,CAAC,GAAGd,KAAK,CAACF,KAAV,CAAvB;AACA,YAAMiB,WAAW,GAAGf,KAAK,CAACF,KAAN,CAAYY,SAAZ,CAAuBH,IAAD,IAAUA,IAAI,CAACI,EAAL,KAAYV,MAAM,CAACU,EAAnD,CAApB;;AACA,UAAGI,WAAW,IAAI,CAAlB,EACA;AACID,QAAAA,gBAAgB,CAACE,MAAjB,CAAwBD,WAAxB,EAAqC,CAArC;AACH;;AACD,aAAO,EAAC,GAAGf,KAAJ;AAAWF,QAAAA,KAAK,EAAEgB;AAAlB,OAAP;;AACR;AACI,aAAOd,KAAP;AAjCR;AAmCH;;AAED,eAAeD,OAAf","sourcesContent":["import {con} from \"./Mysql\";\r\nexport const initialState = {\r\n   users: [],\r\n};\r\n\r\nfunction reducer(state, action)\r\n{\r\n\r\n    switch(action.type)\r\n    {\r\n        case 'ADD_USER':\r\n            con.connect(function(err) {\r\n                if (err) throw err;\r\n                console.log(\"Connected!\");\r\n                /* var sql = `INSERT INTO users (cc, name, country) VALUES ('${action.user.cc}', '${action.user.name}', '${action.user.country}')`;\r\n                con.query(sql, function (err, result) {\r\n                  if (err) {\r\n                      throw err\r\n                    }\r\n                }); */\r\n            });\r\n            return {...state, users: [...state.users, action.user], };\r\n        case 'UPDATE_USER':\r\n            let newUsers = [...state.users];\r\n            const index = state.users.findIndex((user) => user.cc === action.cc);\r\n            if(index >= 0)\r\n            {\r\n                newUsers[index].cc = action.user.cc;\r\n                newUsers[index].name = action.user.name;\r\n                newUsers[index].country = action.user.country;\r\n            } \r\n            return {...state, users: newUsers};\r\n            case 'DELETE_USER':\r\n                let newUsersToDelete = [...state.users];\r\n                const deleteIndex = state.users.findIndex((user) => user.cc === action.cc);\r\n                if(deleteIndex >= 0)\r\n                {\r\n                    newUsersToDelete.splice(deleteIndex, 1);\r\n                } \r\n                return {...state, users: newUsersToDelete};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}