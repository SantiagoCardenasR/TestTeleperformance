{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { con } from \"./Mysql\";\nexport const initialState = {\n  users: []\n};\n\nfunction reducer(state, action) {\n  _s();\n\n  const history = useHistory();\n\n  switch (action.type) {\n    case 'ADD_USER':\n      con.connect(function (err) {\n        if (err) throw err;\n        console.log(\"Connected!\");\n        var sql = `INSERT INTO users (cc, name, country) VALUES ('${action.user.cc}', '${action.user.name}', '${action.user.country}')`;\n        con.query(sql, function (err, result) {\n          if (err) {\n            throw err;\n          }\n        });\n      });\n      return { ...state,\n        users: [...state.users, action.user]\n      };\n\n    case 'UPDATE_USER':\n      let newUsers = [...state.users];\n      const index = state.users.findIndex(user => user.cc === action.cc);\n\n      if (index >= 0) {\n        newUsers[index].cc = action.user.cc;\n        newUsers[index].name = action.user.name;\n        newUsers[index].country = action.user.country;\n      }\n\n      return { ...state,\n        users: newUsers\n      };\n\n    case 'DELETE_USER':\n      let newUsersToDelete = [...state.users];\n      const deleteIndex = state.users.findIndex(user => user.cc === action.cc);\n\n      if (deleteIndex >= 0) {\n        newUsersToDelete.splice(deleteIndex, 1);\n      }\n\n      return { ...state,\n        users: newUsersToDelete\n      };\n\n    default:\n      return state;\n  }\n}\n\n_s(reducer, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", true);\n\nexport default reducer;","map":{"version":3,"sources":["D:/XAMPP/htdocs/tptest/src/reducer.js"],"names":["con","initialState","users","reducer","state","action","history","useHistory","type","connect","err","console","log","sql","user","cc","name","country","query","result","newUsers","index","findIndex","newUsersToDelete","deleteIndex","splice"],"mappings":";;AAAA,SAAQA,GAAR,QAAkB,SAAlB;AACA,OAAO,MAAMC,YAAY,GAAG;AACzBC,EAAAA,KAAK,EAAE;AADkB,CAArB;;AAIP,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EACA;AAAA;;AACI,QAAMC,OAAO,GAAGC,UAAU,EAA1B;;AAEA,UAAOF,MAAM,CAACG,IAAd;AAEI,SAAK,UAAL;AACIR,MAAAA,GAAG,CAACS,OAAJ,CAAY,UAASC,GAAT,EAAc;AACtB,YAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,YAAIC,GAAG,GAAI,kDAAiDR,MAAM,CAACS,IAAP,CAAYC,EAAG,OAAMV,MAAM,CAACS,IAAP,CAAYE,IAAK,OAAMX,MAAM,CAACS,IAAP,CAAYG,OAAQ,IAA5H;AACAjB,QAAAA,GAAG,CAACkB,KAAJ,CAAUL,GAAV,EAAe,UAAUH,GAAV,EAAeS,MAAf,EAAuB;AACpC,cAAIT,GAAJ,EAAS;AACL,kBAAMA,GAAN;AACD;AACJ,SAJD;AAKH,OATD;AAUA,aAAO,EAAC,GAAGN,KAAJ;AAAWF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiBG,MAAM,CAACS,IAAxB;AAAlB,OAAP;;AACJ,SAAK,aAAL;AACI,UAAIM,QAAQ,GAAG,CAAC,GAAGhB,KAAK,CAACF,KAAV,CAAf;AACA,YAAMmB,KAAK,GAAGjB,KAAK,CAACF,KAAN,CAAYoB,SAAZ,CAAuBR,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYV,MAAM,CAACU,EAAnD,CAAd;;AACA,UAAGM,KAAK,IAAI,CAAZ,EACA;AACID,QAAAA,QAAQ,CAACC,KAAD,CAAR,CAAgBN,EAAhB,GAAqBV,MAAM,CAACS,IAAP,CAAYC,EAAjC;AACAK,QAAAA,QAAQ,CAACC,KAAD,CAAR,CAAgBL,IAAhB,GAAuBX,MAAM,CAACS,IAAP,CAAYE,IAAnC;AACAI,QAAAA,QAAQ,CAACC,KAAD,CAAR,CAAgBJ,OAAhB,GAA0BZ,MAAM,CAACS,IAAP,CAAYG,OAAtC;AACH;;AACD,aAAO,EAAC,GAAGb,KAAJ;AAAWF,QAAAA,KAAK,EAAEkB;AAAlB,OAAP;;AACA,SAAK,aAAL;AACI,UAAIG,gBAAgB,GAAG,CAAC,GAAGnB,KAAK,CAACF,KAAV,CAAvB;AACA,YAAMsB,WAAW,GAAGpB,KAAK,CAACF,KAAN,CAAYoB,SAAZ,CAAuBR,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYV,MAAM,CAACU,EAAnD,CAApB;;AACA,UAAGS,WAAW,IAAI,CAAlB,EACA;AACID,QAAAA,gBAAgB,CAACE,MAAjB,CAAwBD,WAAxB,EAAqC,CAArC;AACH;;AACD,aAAO,EAAC,GAAGpB,KAAJ;AAAWF,QAAAA,KAAK,EAAEqB;AAAlB,OAAP;;AACR;AACI,aAAOnB,KAAP;AAjCR;AAmCH;;GAvCQD,O;;AAyCT,eAAeA,OAAf","sourcesContent":["import {con} from \"./Mysql\";\r\nexport const initialState = {\r\n   users: [],\r\n};\r\n\r\nfunction reducer(state, action)\r\n{\r\n    const history = useHistory();\r\n\r\n    switch(action.type)\r\n    {\r\n        case 'ADD_USER':\r\n            con.connect(function(err) {\r\n                if (err) throw err;\r\n                console.log(\"Connected!\");\r\n                var sql = `INSERT INTO users (cc, name, country) VALUES ('${action.user.cc}', '${action.user.name}', '${action.user.country}')`;\r\n                con.query(sql, function (err, result) {\r\n                  if (err) {\r\n                      throw err\r\n                    }\r\n                });\r\n            });\r\n            return {...state, users: [...state.users, action.user], };\r\n        case 'UPDATE_USER':\r\n            let newUsers = [...state.users];\r\n            const index = state.users.findIndex((user) => user.cc === action.cc);\r\n            if(index >= 0)\r\n            {\r\n                newUsers[index].cc = action.user.cc;\r\n                newUsers[index].name = action.user.name;\r\n                newUsers[index].country = action.user.country;\r\n            } \r\n            return {...state, users: newUsers};\r\n            case 'DELETE_USER':\r\n                let newUsersToDelete = [...state.users];\r\n                const deleteIndex = state.users.findIndex((user) => user.cc === action.cc);\r\n                if(deleteIndex >= 0)\r\n                {\r\n                    newUsersToDelete.splice(deleteIndex, 1);\r\n                } \r\n                return {...state, users: newUsersToDelete};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}